version: "3"

services:
  nginx:
    image: nginx
    container_name: nginx
    restart: on-failure
    volumes:
      - ./keycloak.conf:/etc/nginx/conf.d/keycloak.conf
      - ./certs:/etc/nginx/certs
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - keycloak
    networks:
      - keycloak

  keycloak:
    image: quay.io/keycloak/keycloak:18.0.2
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_LOGIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak?ssl=allow
      KC_DB: postgres
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_HEALTH_ENABLED: 'true'
      KC_METRICS_ENABLED: 'true'
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_SCHEMA: public
      KC_PROXY: edge
      KC_HTTP_RELATIVE_PATH: /auth
      PROXY_ADDRESS_FORWARDING: true
      REDIRECT_SOCKET: "proxy-https"
      KEYCLOAK_FRONTEND_URL: https://keycloak.example.com/auth
    command: start-dev
    networks:
      - keycloak
    # ports:
    #   - 8080:8080
    depends_on:
      - postgres
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f http://localhost:8080/auth/realms/master"]
    #   interval: 30s
    #   timeout: 20s
    #   retries: 3

  postgres:
    image: postgres
    container_name: postgres
    networks:
      - keycloak
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password

networks:
  keycloak:

volumes:
  postgres_data:
